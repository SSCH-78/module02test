Answers: <Google Sheet link>

Please answer the below core-java Questions:

A.
What jdk contains or composed of and define each components?
Answer: The JDK is a key platform component for building Java applications.
JRE: Java Runtime Environment
java: It’s simply a loader that works for all the java applications. Also, this particular tool interprets the class file generated by javac. The single java launcher is used for the purpose of development and deployment. Gone are the days, when JRE was used as the deployment launcher. Nowadays, JRE doesn’t exist with the Sun JDK and totally replaced by this new java loader.
javac: It’s a compiler. And, basically, it converts source code into Java bytecode
appletviewer: Through this component, without taking the help of a web browser, we can run the Java applets and even debug them.
apt: This is used as an annotation-processing tool
extcheck: For identifying the conflicts, this next check is used
idlj: An IDL-to-Java compiler, used to generate Java bindings from the provided Java IDL file
jabswitch: It is a Java Access Bridge
javadoc: It is a documentation generator, which produces documentation from source code comments, automatically
jar: It is an archiver. Along with related class libraries packages into one JAR file. Also, it manages those files
javafxpackager: It is a tool to attain packages and sign JavaFX applications
jarsigner: It’s a verification and jar signing tool
javah: It’s a stub generator and ‘C’ header that is used for writing built-in methods
javap: It’s a class file disassembler
javaws: It’s a Java Web Start launcher for JNLP applications
JConsole: It’s a Console used for Java Monitoring and Management

What is IDE?
Answer: An integrated development environment (IDE) is a software application that provides comprehensive
facilities to computer programmers for software development. An IDE normally consists of at least a source
code editor, build automation tools and a debugger.

What are the IDEs available in the market to support java?
Eclipse
IntelliJ
NetBeans
JDeveloper
MyEclipse
BlueJ
JCreator
DrJava
jGRASP
JSource

Explain the entire java life cycle.
First, you will start with typing the program in a text editor.
After completing editing of the program, we have to save the file.
While saving the file you should remember that the file must be saved with a .java extension. For example,
let’s think that I had written a Java program which contains a single class Sample. It is a good convention to
save the file with the name of the class. So, as per my example, the file will be saved as Sample.java.
The second step is compilation. The name of the Java compiler is javac. The input to the compiler is Java source
code which is available in Sample.java.The output of the compiler is machine independent or platform independent
code which is known as bytecode. The file which is generated after compilation is .class file. As per my example,
the bytecode file will be Sample.class. The last step is execution. The bytecode generated by the compiler will
be executed by Java Virtual Machine (JVM). Input to the JVM is bytecode and output is machine code (0’s and 1’s)
which will be executed by the CPU of the local machine.

what is class?
A class is a blueprint that defines the variables and the methods common to all objects of a certain kind.

What is object?
An entity that has state and behavior is known as an object.

What is the entry point of an application?
The main method is the entry point.

Why main is static?
It is always static, so that compiler can call it without the creation of an object or before
the creation of an object of the class.

Which class is the superclass of all classes?
Object class

What is difference between path and classpath variables?
Path is an environment variable which is used by the operating system to find the executables. Classpath is an
environment variable which is used by the Java compiler to find the path, of classes.

What is the difference between an Interface and Abstract class?
Methods of a Java interface are implicitly abstract and cannot have implementations. A Java abstract class can
have instance methods that implements a default behavior. A Java abstract class can have class members like
private, protected, etc. Members of a Java interface are public by default.

Can you make an Object from an Interface and Abstract class ? if not how do you use it ?
no. For interface, we must create a class which implement the interface and implement bodies of interface
methods. For abstract class we need to ussubclass.

what is Access Specifier?
Access specifiers define how the members (attributes and methods) of a class can be accessed

What is OOP ? Define each feature of java OOP.
OOP is Object Oriented Programing. OOP have 4 primary concept abstraction, encapsulation, inheritance,
and polymorphism.
=> Abstraction means simple things like objects, classes, and variables represent more complex underlying code and data.
=> This is the practice of keeping fields within a class private, then providing access to them via public methods.
=> It lets programmers create new classes that share some of the attributes of existing classes.
=> This Java OOP concept lets programmers use the same word to mean different things in different contexts. One form of
polymorphism in Java is method overloading.

What is Java Package and which package is imported by default?
Answer: Package is a directory and The Java standard libraries include java. lang package by default, which contains a
number of components that are used very commonly in Java programs.

What is API? Name list of API that you have used so far.
Answer: API stand for Application Programming Interface. One of them is HTTP.

Does java support multiple inheritance, explain why or why not?
Answer: java does not support multiple inheritances through classes but through the interfaces, we can use multiple
inheritances . No java doesn't support multiple inheritance directly because it leads to overriding of methods when
both extended class have a same method name.

What is method overloading and when it happens?
Answer: Method Overloading is a feature that allows a class to have more than one method having the same name, if their
argument lists are different. When there is two method with same name in the same class with different signature.

Explain exceptions in java and how to handle it.
Answer:An Exception is an unwanted event that interrupts the normal flow of the program. When an exception occurs
program execution gets terminated. The try-catch is the simplest method of handling exceptions.

What is static keyword in java? How it has been used in variables and methods ?
t is a keyword which is used to share the same variable or method of a given class. Basically, static is used
for a constant variable or a method that is same for every instance of a class

What is final and how it has been used variables and methods?
When a variable is declared with final keyword, its value can't be modified, essentially, a constant. This also
means that you must initialize a final variable.

What is final, finally and finalize?
Final is used to apply restrictions on class, method and variable. Final class can't be inherited, final method can't be overridden and final variable value can't be changed.
Finally is block and  is used to place important code, it will be executed whether exception is handled or not.
Finalize is method and is used to perform clean up processing just before object is garbage collected.

What is a constructor ?
A constructor is a member function of a class which initializes objects of a class

Can we have multiple constructors in a class?
yes

If we don't have a constructor declared, what is called during the object creation?
a default constructor is created

What is "this" keyword in java ?
The this keyword refers to the current object in a method or constructor

What is "super" keyword in java? How many possible way can you use?
super can be used to refer immediate parent class instance variable. super can be used to invoke immediate
parent class method. super() can be used to invoke immediate parent class constructor.

What is JVM stand for ?
JAVA VIRTUAL MACHINE

Is JVM platform independent?
It is a platform independent language i.e. the compiled code can be run on any java supporting platform

What version of java are you using?
1.8.0_261

What is JAR stand for ?
Java ARchive

What is the difference between JDK and JVM?
JDK is a software development kit. JVM is an environment for executing bytecode

What is the difference between JVM and JRE?
JVM is an environment for executing bytecode. The Java Runtime Environment (JRE) provides the libraries

What is compile time and run time?
Compile-time is the time at which the source code is converted into an executable code while the run time is
the time at which the executable code is started running.

What is heap?
Answer: The heap is the runtime data area from which memory for all class instances and arrays is allocated.

How java manage it's memory?
Answer: The Java Virtual Machine loads the code, verifies the code, executes the code, manages memory
and finally provides the runtime environment.

What is the difference between String, StringBuffer and StringBuilder?
Answer: String is immutable whereas StringBuffer and StringBuilder are mutable classes. StringBuffer is thread-safe and
synchronized whereas StringBuilder is not. That's why StringBuilder is faster than StringBuffer.

What is Singleton class?
a singleton class is a class that can have only one object at a time.

What is Serialization and Deserialization?
Serialization is a mechanism of converting the state of an object into a byte stream. Deserialization is the
reverse process where the byte stream is used to recreate the actual Java object in memory.

when to use transient variable in java?
The Java transient keyword is used on class attributes/variables to indicate that serialization process of such
class should ignore such variables while creating a persistent byte stream for any instance of that class.

Difference between while and do..while loop?
while loop check condition before iteration of the loop. On the other hand, the do-while loop verifies the
condition after the execution of the statements inside the loop.

What is Enum?
An enum is a special "class" that represents a group of constants and separate the constants with a comma.

What is Iterator?
An Iterator is an object that can be used to loop through collections, like ArrayList and HashSet.

Which one will take more memory, an int or Integer?
Integer

Why is String Immutable in Java?
The string is Immutable in Java because String objects are cached in String pool.

What is constructor chaining in Java?
Constructor chaining is the process of calling one constructor from another constructor with respect to current object

The difference between Serial and Parallel Garbage Collector?
a serial collector is a default copying collector which uses only one GC thread for the GC operation, while a parallel collector uses 
multiple GC threads for the GC operation.

What is JIT stands for?
Joint Investigation Team

Explain Java Heap space and Garbage collection?
The heap is created when the JVM starts up and may increase or decrease in size while the application runs. When the heap becomes full, garbage 
is collected. During the garbage collection objects that are no longer used are cleared, thus making space for new objects.

Can you guarantee the garbage collection process?
No, Garbage collection does not guarantee that a program will not run out of memory.

What is the difference between stack and heap in Java?
JVM has divided memory space between two parts one is Stack and another one is Heap space. 
Stack always stored blocks in LIFO order whereas heap memory used dynamic allocation for allocating and deallocating memory blocks

What is reflection in java and why is it useful?
Java Reflection makes it possible to inspect classes, interfaces, fields and methods at runtime, without knowing the names of the classes, 
methods etc. at compile time. It is also possible to instantiate new objects, invoke methods and get/set field values using reflection.

what is multithreading in java?
Multithreading is a Java feature that allows concurrent execution of two or more parts of a program for maximum utilization of CPU.

What is the use of synchronization in Java?
Synchronized keyword in Java is used to provide mutually exclusive access to a shared resource with multiple threads in Java.

What is Framework?
Frameworks are bodies of pre-written code used by developers to create apps using the Java programming language.

What are the testing Framework available in java?
JTest
The Grinder
TestNG
JUnit
JWalk
Mockito
Powermock

Difference between jUnit and testNG?
jUnit Does not support advanced annotations.TestNG supports advanced annotations and special annotations.
Does not support parallel testing		Supports parallel testing

What are the dependencies for this project?
postgres
testNG
apache

what is dependency injection in java?
Dependency injection (DI) is the concept in which objects get other required objects from outside.

What is static binding and dynamic binding?
Static binding happens at compile-time while dynamic binding happens at runtime.

What is Collections Framework?
A collections framework is a unified architecture for representing and manipulating collections, enabling collections to be manipulated 
independently of implementation details

What is Collection and Collections?
Collection is a top level interface of java collection framework where as Collections is an utility class

Explain what is main method?
The purpose of main method in Java is to be program execution start point.

What is StringBuffer and String Builder?
StringBuffer is a peer class of String that provides much of the functionality of strings
StringBuilder is a mutable sequence of characters. StringBuilder is used when we want to modify Java strings in-place

What do you understand by Thread Safe?
threadsafe means that it is safe to be accessed from multiple threads. 

What are the latest changes in Java 8?
It allows method decalartuon in inteface using defautl keyword.

What do you understand by default method in Java?
Default methods enable us to add new functionality to the interfaces.










